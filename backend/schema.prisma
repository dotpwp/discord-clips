datasource db {
    provider = "postgresql"
    url      = env("DB_POSTGRES_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum EnumEncoderStatus {
    IGNORED // Disabled by Encoder Options
    QUEUED // Needs Encoding
    PROCESSING // Encoder Assigned
    COMPLETE // Format Available
}

enum EnumVideoCodec {
    H264
    VP9
}

enum EnumAudioCodec {
    NONE
    AAC
    OPUS
}

model User {
    id          BigInt   @unique @default(autoincrement())
    created     DateTime @default(now())
    updated     DateTime @default(now()) @updatedAt
    avatar      String?
    username    String
    permissions Json     @default("{\"cachedAt\":-1}")
    uploads     Clip[]
    uploadCount Int      @default(0)
    hearts      Heart[]
}

model Server {
    id            BigInt     @unique @default(autoincrement())
    created       DateTime   @default(now())
    updated       DateTime   @default(now()) @updatedAt
    name          String
    icon          String?
    allowGuests   Boolean    @default(true)
    uploadCount   Int        @default(0)
    uploads       Clip[]
    categoryCount Int        @default(0)
    categories    Category[]
    webhooks      Json
}

model Category {
    id         BigInt   @unique @default(autoincrement())
    created    DateTime @default(now())
    serverId   BigInt
    name       String
    icon       String
    modManaged Boolean  @default(false)

    server Server @relation(fields: [serverId], references: [id])
    clips  Clip[]
}

model Heart {
    id      BigInt   @unique @default(autoincrement())
    created DateTime @default(now())
    userId  BigInt
    clipId  BigInt

    clip Clip @relation(fields: [clipId], references: [id])
    user User @relation(fields: [userId], references: [id])
}

model Clip {
    id                    BigInt   @unique @default(autoincrement())
    created               DateTime @default(now())
    updated               DateTime @default(now()) @updatedAt
    userId                BigInt
    serverId              BigInt
    categoryId            BigInt
    title                 String
    description           String
    duration              Int
    approximateViewCount  Int      @default(0)
    approximateHeartCount Int      @default(0)
    hearts                Heart[]
    formats               Format[]
    available             Boolean  @default(false)
    deleted               Boolean  @default(false)
    encoderOptions        Json

    category Category @relation(fields: [categoryId], references: [id])
    server   Server   @relation(fields: [serverId], references: [id])
    user     User     @relation(fields: [userId], references: [id])
}

model Format {
    id             BigInt            @unique @default(autoincrement())
    created        DateTime          @default(now())
    encodingTime   Int               @default(0)
    encodingStatus EnumEncoderStatus @default(QUEUED)
    videoHeight    Int
    videoWidth     Int
    codecVideo     EnumVideoCodec
    codecAudio     EnumAudioCodec
    framerate      Int
    bitrateVideo   Int
    bitrateAudio   Int

    clipId BigInt
    clip   Clip   @relation(fields: [clipId], references: [id])

    @@index([encodingStatus])
}
